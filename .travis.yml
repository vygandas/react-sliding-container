language: node_js

compiler: gcc
sudo: false

env:
  global:
    - SKIP_SASS_BINARY_DOWNLOAD_FOR_CI=true

jobs:
  include:
    - stage: test
      node_js: "node"
      os: linux
      before_script: npm run lint || exit 1;
      after_success: npm run-script coverage;
    - stage: platform-test
      node_js: "node"
      os: osx
    - stage: platform-test
      node_js: "9"
      os: linux
    - stage: platform-test
      node_js: "9"
      os: osx
    - stage: platform-test
      node_js: "7"
      os: linux
    - stage: platform-test
      node_js: "7"
      os: osx
    - stage: platform-test
      node_js: "lts/carbon"
      os: linux
    - stage: platform-test
      node_js: "lts/carbon"
      os: osx
    - stage: platform-test
      node_js: "lts/boron"
      os: linux
    - stage: platform-test
      node_js: "lts/boron"
      os: osx
    - stage: platform-test
      node_js: "lts/argon"
      os: linux
    - stage: platform-test
      node_js: "lts/argon"
      os: osx
    - stage: platform-test
      node_js: "0.12"
      os: linux
    - stage: platform-test
      node_js: "0.10"
      os: linux

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-4.7
      - g++-4.7
      - gcc-4.9
      - g++-4.9

before_install:
  - echo $TRAVIS_NODE_VERSION
  - npm config set python `which python`
  - if [ $TRAVIS_OS_NAME == "linux" ]; then
      if [[ $(node -v) =~ "10" ]]; then
        export CC="gcc-4.9";
        export CXX="g++-4.9";
        export LINK="gcc-4.9";
        export LINKXX="g++-4.9";
      else
        export CC="gcc-4.7";
        export CXX="g++-4.7";
        export LINK="gcc-4.7";
        export LINKXX="g++-4.7";
      fi
    fi
  - nvm --version
  - node --version
  - npm --version
  - gcc --version
  - g++ --version

install:
  - npm install

script:
  - npm test

# cache:
#   directories:
#     - $HOME/.node-gyp
#     - $HOME/.npm
#     - node_modules

# notifications:
#   webhooks:
#     urls:
#       - https://webhooks.gitter.im/e/??
#     on_success: change